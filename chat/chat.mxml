<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="500" minHeight="300" layout="absolute" applicationComplete="init()">
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.URLUtil;

			private var _netConnection:NetConnection;
			private var _namePopup:TitleWindow;
			private var _userName:String;
			[Bindable] private var _listUsers:ArrayCollection = new ArrayCollection();
			
			private function init():void {
				// Generate dynamic url
				var url:String = loaderInfo.url;
				var domainNPath:Array = url.match(/(:\/\/.+)\//);
				if (URLUtil.getProtocol(url) == "file") {
					Alert.show("Error : The Chat sample can't be loaded locally!");
				} else {
					address.text = "rtmfp" + domainNPath[0];
					connect();
				}
			}
			
			// send button handler
			private function send(event:Event):void {
				
				// Accept only <ENTER> key
				if (event is KeyboardEvent) {
					var eventKey:KeyboardEvent = event as KeyboardEvent;
					if (eventKey.keyCode != 13)
						return;
				}
				
				if (message.text != "") {
					_netConnection.call("onMessage", null, message.text);
					message.text = "";
				}
			}
			
			// connect button handler
			private function connect():void {
				
				// make a new NetConnection and connect
				_netConnection = new NetConnection();
				_netConnection.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
				_netConnection.connect(address.text, "test1", "test2");
				_netConnection.client = this;
			}
			
			// Write message to the text area
			public function onReception(prompt:String, message:String):void {
				discussion.text += prompt + message + "\n";
			}
			
			// Write message to the text area
			public function onEvent(event:String, nameUser:String):void {
				
				switch(event) {
					case "connection":
						if (nameUser != _userName)
							_listUsers.addItem(nameUser);
						break;
					case "disconnection":
						var index:int = _listUsers.getItemIndex(nameUser);
						if (index > -1)
							_listUsers.removeItemAt(index);
						break;
				}
			}
			
			// Try to identificate
			private function sendName(event:Event):void {
				
				// Accept only <ENTER> key
				if (event is KeyboardEvent) {
					var eventKey:KeyboardEvent = event as KeyboardEvent;
					if (eventKey.keyCode != 13)
						return;
				}
				
				var userName:TextInput = _namePopup.getChildByName("userName") as TextInput;
				if (userName != null && userName.text!="") {
					
					_userName = userName.text;
					_netConnection.call("onIdentification", null, _userName);
					PopUpManager.removePopUp(_namePopup);
				}
			}
			
			private function closeNamePopup(event:CloseEvent):void {
				
				PopUpManager.removePopUp(_namePopup);
			}
			
			// net status handler for the NetConnection
			private function onStatus(evt:NetStatusEvent):void {
				
				if (evt.info.code == "NetConnection.Connect.Success") {
					btConnect.enabled = false;
					
					// create and configure the Identification Window
					_namePopup = new TitleWindow();
					_namePopup.title = "Please enter your name :";
					_namePopup.showCloseButton = true;
					_namePopup.addEventListener(CloseEvent.CLOSE, closeNamePopup);
					
					// create and configure a Label
					var userName:TextInput = new TextInput();
					userName.text = "User";
					userName.name = "userName";
					_namePopup.addChild(userName);
					// add buttons OK and Cancel
					var btOK:Button = new Button();
					btOK.label = "OK";
					btOK.addEventListener(MouseEvent.CLICK, sendName);
					btOK.addEventListener(KeyboardEvent.KEY_DOWN, sendName);
					userName.addEventListener(KeyboardEvent.KEY_DOWN, sendName);
					_namePopup.addChild(btOK);
					
					// open the Identification Window as a modal popup window
					PopUpManager.addPopUp(_namePopup, this, true);
					PopUpManager.centerPopUp(_namePopup);

					userName.setFocus();
				} else
					btConnect.enabled = true;
			}
			
			
		]]>
	</fx:Script>
	<mx:VBox x="10" y="10" height="100%" paddingRight="10" width="100%">
		<mx:HBox width="100%">
			<mx:TextInput width="400" text="rtmfp://localhost/clients/chat" id="address"/>
			<mx:Button label="Connect" click="connect()" id="btConnect"/>
		</mx:HBox>
		<mx:HBox width="100%" height="100%">
			<mx:VBox width="80%" height="100%">
				<mx:TextArea height="95%" width="100%" text="" id="discussion" editable="false" valueCommit="discussion.verticalScrollPosition=discussion.maxVerticalScrollPosition"/>
				<mx:TextInput width="100%" id="message" keyDown="send(event)"/>
			</mx:VBox>
			<mx:VBox width="20%" height="100%">
				<s:List height="95%" dataProvider="{_listUsers}" width="100%"/>
				<mx:Button label="Send" click="send(event)" keyDown="send(event)"/>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
	
</mx:Application>